name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    strategy:
      matrix:
        os: [
            ubuntu-latest,
            windows-latest,
            macos-latest
        ]
        node: [18.x, 20.x, latest]
        exclude:
          - os: macos-latest
            node: 20.x
          - os: macos-latest
            node: 18.x
          - os: windows-latest
            node: 20.x
          - os: windows-latest
            node: 18.x
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Install Rust
      run: rustup update stable --no-self-update && rustup default stable
    - name: Install wasm32-unknown-unknown target
      run: rustup target add wasm32-unknown-unknown
    - name: Install wasm32-wasi target
      run: rustup target add wasm32-wasi
    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-linux.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if: matrix.os == 'ubuntu-latest'
    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-macos.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if: matrix.os == 'macos-latest'
    - run: |
        curl https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-16/wasi-sdk-16.0-mingw.tar.gz -L | tar xzvf -
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-16.0" >> $GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Install NPM packages
      run: npm install

    - name: Build
      run: npm run build

    - name: Test LTS Node.js
      run: npm run test:lts
      if: matrix.node == '18.x' || matrix.node == '20.x'

    - name: Test Latest Node.js
      run: npm run test
      if: matrix.node == 'latest'

    - name: WASI Preview 2 Conformance
      run: cargo test

  test-workspaces:
    name: Test Workspaces
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install NPM packages
      run: npm install
    - name: Test Workspaces
      run: npm run test --workspaces

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install NPM packages
      run: npm install
    - name: Lint
      run: npm run lint

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Format source code
      run: cargo fmt -- --check
