let call_id = 0;

// Call is a 32 bit integer, leading 16 bits are call number, trailing 16 bits allow custom call types
export const CALL_MASK = 0xff000000;
export const CALL_TYPE_MASK = 0x00ffffff;
export const CALL_SHIFT = 24;

// Io Input Stream
export const INPUT_STREAM_CREATE = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_READ = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_BLOCKING_READ = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_SKIP = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_BLOCKING_SKIP = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_SUBSCRIBE = ++call_id << CALL_SHIFT;
export const INPUT_STREAM_DISPOSE = ++call_id << CALL_SHIFT;

// Io Output Stream
export const OUTPUT_STREAM_CREATE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_CHECK_WRITE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_WRITE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_BLOCKING_WRITE_AND_FLUSH = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_FLUSH = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_BLOCKING_FLUSH = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_WRITE_ZEROES = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_BLOCKING_WRITE_ZEROES_AND_FLUSH =
  ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_SPLICE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_BLOCKING_SPLICE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_SUBSCRIBE = ++call_id << CALL_SHIFT;
export const OUTPUT_STREAM_DISPOSE = ++call_id << CALL_SHIFT;

export const OUTPUT_STREAM_GET_TOTAL_BYTES = ++call_id << CALL_SHIFT;

// Io Poll
export const POLL_POLLABLE_READY = ++call_id << CALL_SHIFT;
export const POLL_POLLABLE_BLOCK = ++call_id << CALL_SHIFT;
export const POLL_POLL_LIST = ++call_id << CALL_SHIFT;

// Futures
export const FUTURE_GET_VALUE_AND_DISPOSE = ++call_id << CALL_SHIFT;
export const FUTURE_DISPOSE = ++call_id << CALL_SHIFT;

// Http
export const HTTP_CREATE_REQUEST = ++call_id << 24;
export const HTTP_OUTPUT_STREAM_FINISH = ++call_id << CALL_SHIFT;
// Http server
export const HTTP_SERVER_START = ++call_id << CALL_SHIFT;
export const HTTP_SERVER_STOP = ++call_id << CALL_SHIFT;
export const HTTP_SERVER_INCOMING_HANDLER = ++call_id << CALL_SHIFT;
export const HTTP_SERVER_SET_OUTGOING_RESPONSE = ++call_id << CALL_SHIFT;
export const HTTP_SERVER_CLEAR_OUTGOING_RESPONSE = ++call_id << CALL_SHIFT;

// Clocks
export const CLOCKS_NOW = ++call_id << 24;
export const CLOCKS_DURATION_SUBSCRIBE = ++call_id << 24;
export const CLOCKS_INSTANT_SUBSCRIBE = ++call_id << 24;

// Sockets (TCP)
export const SOCKET_TCP_CREATE_HANDLE = ++call_id << 24;
export const SOCKET_TCP_BIND = ++call_id << 24;
export const SOCKET_TCP_CONNECT = ++call_id << 24;
export const SOCKET_TCP_LISTEN = ++call_id << 24;
export const SOCKET_TCP_ACCEPT = ++call_id << 24;
export const SOCKET_TCP_GET_LOCAL_ADDRESS = ++call_id << 24;
export const SOCKET_TCP_GET_REMOTE_ADDRESS = ++call_id << 24;
export const SOCKET_TCP_SHUTDOWN = ++call_id << 24;
export const SOCKET_TCP_SET_KEEP_ALIVE = ++call_id << 24;
export const SOCKET_TCP_DISPOSE = ++call_id << 24;
export const SOCKET_TCP_CREATE_INPUT_STREAM = ++call_id << 24;
export const SOCKET_TCP_CREATE_OUTPUT_STREAM = ++call_id << 24;
// Sockets (UDP)
export const SOCKET_UDP_CREATE_HANDLE = ++call_id << 24;
export const SOCKET_UDP_BIND = ++call_id << 24;
export const SOCKET_UDP_CONNECT = ++call_id << 24;
export const SOCKET_UDP_DISCONNECT = ++call_id << 24;
export const SOCKET_UDP_CHECK_SEND = ++call_id << 24;
export const SOCKET_UDP_SEND = ++call_id << 24;
export const SOCKET_UDP_RECEIVE = ++call_id << 24;
export const SOCKET_UDP_DISPOSE = ++call_id << 24;
export const SOCKET_UDP_GET_LOCAL_ADDRESS = ++call_id << 24;
export const SOCKET_UDP_GET_REMOTE_ADDRESS = ++call_id << 24;
export const SOCKET_UDP_GET_RECEIVE_BUFFER_SIZE = ++call_id << 24;
export const SOCKET_UDP_SET_RECEIVE_BUFFER_SIZE = ++call_id << 24;
export const SOCKET_UDP_GET_SEND_BUFFER_SIZE = ++call_id << 24;
export const SOCKET_UDP_SET_SEND_BUFFER_SIZE = ++call_id << 24;
export const SOCKET_UDP_SET_UNICAST_HOP_LIMIT = ++call_id << 24;
export const SOCKET_RESOLVE_ADDRESS_CREATE_REQUEST = ++call_id << 24;
export const SOCKET_RESOLVE_ADDRESS_GET_AND_DISPOSE_REQUEST = ++call_id << 24;
export const SOCKET_RESOLVE_ADDRESS_DISPOSE_REQUEST = ++call_id << 24;

// Type indiciator for generic Stream, Future, and Poll calls
let cnt = 0;
export const STDIN = ++cnt;
export const STDOUT = ++cnt;
export const STDERR = ++cnt;
export const FILE = ++cnt;
export const HTTP = ++cnt;
export const SOCKET = ++cnt;

export const callTypeMap = {
  [STDIN]: "STDIN",
  [STDOUT]: "STDOUT",
  [STDERR]: "STDERR",
  [FILE]: "FILE",
  [HTTP]: "HTTP",
  [SOCKET]: "SOCKET",
};

export const callMap = {
  [INPUT_STREAM_CREATE]: 'INPUT_STREAM_CREATE',
  [INPUT_STREAM_READ]: "INPUT_STREAM_READ",
  [INPUT_STREAM_BLOCKING_READ]: "INPUT_STREAM_BLOCKING_READ",
  [INPUT_STREAM_SKIP]: "INPUT_STREAM_SKIP",
  [INPUT_STREAM_BLOCKING_SKIP]: "INPUT_STREAM_BLOCKING_SKIP",
  [INPUT_STREAM_SUBSCRIBE]: "INPUT_STREAM_SUBSCRIBE",
  [INPUT_STREAM_DISPOSE]: "INPUT_STREAM_DISPOSE",

  // Io Output Stream
  [OUTPUT_STREAM_CREATE]: "OUTPUT_STREAM_CREATE",
  [OUTPUT_STREAM_CHECK_WRITE]: "OUTPUT_STREAM_CHECK_WRITE",
  [OUTPUT_STREAM_WRITE]: "OUTPUT_STREAM_WRITE",
  [OUTPUT_STREAM_BLOCKING_WRITE_AND_FLUSH]: "OUTPUT_STREAM_BLOCKING_WRITE_AND_FLUSH",
  [OUTPUT_STREAM_FLUSH]: "OUTPUT_STREAM_FLUSH",
  [OUTPUT_STREAM_BLOCKING_FLUSH]: "OUTPUT_STREAM_BLOCKING_FLUSH",
  [OUTPUT_STREAM_WRITE_ZEROES]: "OUTPUT_STREAM_WRITE_ZEROES",
  [OUTPUT_STREAM_BLOCKING_WRITE_ZEROES_AND_FLUSH]: "OUTPUT_STREAM_BLOCKING_WRITE_ZEROES_AND_FLUSH",
  [OUTPUT_STREAM_SPLICE]: "OUTPUT_STREAM_SPLICE",
  [OUTPUT_STREAM_BLOCKING_SPLICE]: "OUTPUT_STREAM_BLOCKING_SPLICE",
  [OUTPUT_STREAM_SUBSCRIBE]: "OUTPUT_STREAM_SUBSCRIBE",
  [OUTPUT_STREAM_DISPOSE]: "OUTPUT_STREAM_DISPOSE",

  [OUTPUT_STREAM_GET_TOTAL_BYTES]: "OUTPUT_STREAM_GET_TOTAL_BYTES",

  // Io Poll
  [POLL_POLLABLE_READY]: "POLL_POLLABLE_READY",
  [POLL_POLLABLE_BLOCK]: "POLL_POLLABLE_BLOCK",
  [POLL_POLL_LIST]: "POLL_POLL_LIST",

  // Futures
  [FUTURE_GET_VALUE_AND_DISPOSE]: "FUTURE_GET_VALUE_AND_DISPOSE",
  [FUTURE_DISPOSE]: "FUTURE_DISPOSE",

  // Http
  [HTTP_CREATE_REQUEST]: "HTTP_CREATE_REQUEST",
  [HTTP_OUTPUT_STREAM_FINISH]: "HTTP_OUTPUT_STREAM_FINISH",
  // Http server
  [HTTP_SERVER_START]: "HTTP_SERVER_START",
  [HTTP_SERVER_STOP]: "HTTP_SERVER_STOP",
  [HTTP_SERVER_INCOMING_HANDLER]: "HTTP_SERVER_INCOMING_HANDLER",
  [HTTP_SERVER_SET_OUTGOING_RESPONSE]: "HTTP_SERVER_SET_OUTGOING_RESPONSE",
  [HTTP_SERVER_CLEAR_OUTGOING_RESPONSE]: "HTTP_SERVER_CLEAR_OUTGOING_RESPONSE",

  // Clocks
  [CLOCKS_NOW]: "CLOCKS_NOW",
  [CLOCKS_DURATION_SUBSCRIBE]: "CLOCKS_DURATION_SUBSCRIBE",
  [CLOCKS_INSTANT_SUBSCRIBE]: "CLOCKS_INSTANT_SUBSCRIBE",

  // Sockets TCP
  [SOCKET_TCP_CREATE_HANDLE]: "SOCKET_TCP_CREATE_HANDLE",
  [SOCKET_TCP_BIND]: "SOCKET_TCP_BIND",
  [SOCKET_TCP_CONNECT]: "SOCKET_TCP_CONNECT",
  [SOCKET_TCP_LISTEN]: "SOCKET_TCP_LISTEN",
  [SOCKET_TCP_ACCEPT]: "SOCKET_TCP_ACCEPT",
  [SOCKET_TCP_GET_LOCAL_ADDRESS]: "SOCKET_TCP_GET_LOCAL_ADDRESS",
  [SOCKET_TCP_GET_REMOTE_ADDRESS]: "SOCKET_TCP_GET_REMOTE_ADDRESS",
  [SOCKET_TCP_SHUTDOWN]: "SOCKET_TCP_SHUTDOWN",
  [SOCKET_TCP_SET_KEEP_ALIVE]: "SOCKET_TCP_SET_KEEP_ALIVE",
  [SOCKET_TCP_DISPOSE]: "SOCKET_TCP_DISPOSE",
  [SOCKET_TCP_CREATE_INPUT_STREAM]: "SOCKET_TCP_CREATE_INPUT_STREAM",
  [SOCKET_TCP_CREATE_OUTPUT_STREAM]: "SOCKET_TCP_CREATE_OUTPUT_STREAM",
  // Sockets UDP
  [SOCKET_UDP_CREATE_HANDLE]: "SOCKET_UDP_CREATE_HANDLE",
  [SOCKET_UDP_BIND]: "SOCKET_UDP_BIND",
  [SOCKET_UDP_CONNECT]: "SOCKET_UDP_CONNECT",
  [SOCKET_UDP_DISCONNECT]: "SOCKET_UDP_DISCONNECT",
  [SOCKET_UDP_CHECK_SEND]: "SOCKET_UDP_CHECK_SEND",
  [SOCKET_UDP_SEND]: "SOCKET_UDP_SEND",
  [SOCKET_UDP_RECEIVE]: "SOCKET_UDP_RECEIVE",
  [SOCKET_UDP_DISPOSE]: "SOCKET_UDP_DISPOSE",
  [SOCKET_UDP_GET_LOCAL_ADDRESS]: "SOCKET_UDP_GET_LOCAL_ADDRESS",
  [SOCKET_UDP_GET_REMOTE_ADDRESS]: "SOCKET_UDP_GET_REMOTE_ADDRESS",
  [SOCKET_UDP_GET_RECEIVE_BUFFER_SIZE]: "SOCKET_UDP_GET_RECEIVE_BUFFER_SIZE",
  [SOCKET_UDP_SET_RECEIVE_BUFFER_SIZE]: "SOCKET_UDP_SET_RECEIVE_BUFFER_SIZE",
  [SOCKET_UDP_GET_SEND_BUFFER_SIZE]: "SOCKET_UDP_GET_SEND_BUFFER_SIZE",
  [SOCKET_UDP_SET_SEND_BUFFER_SIZE]: "SOCKET_UDP_SET_SEND_BUFFER_SIZE",
  [SOCKET_UDP_SET_UNICAST_HOP_LIMIT]: "SOCKET_UDP_SET_UNICAST_HOP_LIMIT",
  // Socket DNS
  [SOCKET_RESOLVE_ADDRESS_CREATE_REQUEST]: "SOCKET_RESOLVE_ADDRESS_CREATE_REQUEST",
  [SOCKET_RESOLVE_ADDRESS_GET_AND_DISPOSE_REQUEST]: "SOCKET_RESOLVE_ADDRESS_GET_AND_DISPOSE_REQUEST",
  [SOCKET_RESOLVE_ADDRESS_DISPOSE_REQUEST]: "SOCKET_RESOLVE_ADDRESS_DISPOSE_REQUEST",
};